<?xml version="1.0" encoding="UTF-8"?> 
<beans  xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
							http://www.springframework.org/schema/tx 
							http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
							http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-4.1.xsd 
							http://www.springframework.org/schema/mvc 
							http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
								
    <context:annotation-config />
    
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
    
    <mvc:annotation-driven validator="validator" conversion-service="conversionService">
    	<mvc:message-converters register-defaults="true">  
    		<ref bean="mappingJacksonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <context:component-scan base-package="com.novel.controller"></context:component-scan>
    
    <!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期类型转换 -->
				<bean class="com.novel.core.CustomDateConverter"/>
			</list>
		</property>
	</bean>
    
    <mvc:interceptors>  
	    <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
	    <mvc:interceptor>
	    	<mvc:mapping path="/**"/>
	    	<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	    </mvc:interceptor>
	    <mvc:interceptor>
	    	<mvc:mapping path="/**"/>
	    	<bean class="com.novel.core.interceptor.DataInterceptor" />
	    </mvc:interceptor>
	    <mvc:interceptor>
	    	<mvc:mapping path="/admin/**"/>
	    	<bean class="com.novel.core.interceptor.AuthInterceptor"></bean>
	    </mvc:interceptor>
	    <!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
	    <mvc:interceptor>
	    	<mvc:mapping path="/static/**"/>
	    	<bean class="com.novel.core.interceptor.FreeMarkerInterceptor"></bean>
	    </mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 --> 
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    	<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
    </bean>
    
    <!-- 另外最好还要加入DefaultAnnotationHandlerMapping，不然会被 XML或其它的映射覆盖！ -->  
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    
    <!-- 对静态资源文件的访问 -->    
	<mvc:resources mapping="/WEB-INF/html/**" location="/WEB-INF/html/" />
	<mvc:resources mapping="/html/**" location="/html/" /> 
    
	<!--freemarker页面解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".ftl"></property>
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="cache" value="true"/>
		<property name="allowSessionOverride" value="true" />
		<!-- 将Spring的FreeMarkerView改成我们扩展的View -->
		<property name="viewClass" value="com.novel.core.ModifiedFreeMarkerView" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!--配置Freemarker -->
	<bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
 		<property name="templateLoaderPath" value="/WEB-INF/freemarker/static/"></property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">7200000</prop>
				<prop key="defaultEncoding">UTF-8</prop>
			</props>
		</property>
	</bean>
	
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	 <property name="prefix" value="/WEB-INF/jsp/"/>  
         <property name="suffix" value=".jsp"/>
    </bean>  
    
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	 <property name="prefix" value="/html/"/>  
         <property name="suffix" value=".html"/>
         <property name="viewNames" value='404, 500'></property>
    </bean> 
    
    <!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名-->
		<property name="basenames">   
       	 <list>    
            <value>classpath:customValidationMessages</value> 
       	 </list>   
    	</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="UTF-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	
	<!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- 设置上传文件的最大尺寸为1MB -->
    	<property name="maxUploadSize" value="1048576"/>
    	<property name="maxInMemorySize" value="4096"></property>
    	<property name="defaultEncoding" value="UTF-8"></property>
    </bean>
    
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error.jsp页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop>
			</props>
		</property>
	</bean>
</beans>