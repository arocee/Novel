<?xml version="1.0" encoding="UTF-8"?> 
<beans  xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
							http://www.springframework.org/schema/tx 
							http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
							http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-4.1.xsd 
							http://www.springframework.org/schema/mvc 
							http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
								
    <context:annotation-config />
    
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
    
    <mvc:annotation-driven>
    	<mvc:message-converters register-defaults="true">  
    		<ref bean="mappingJacksonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <context:component-scan base-package="com.novel.controller"></context:component-scan>
    
    <mvc:interceptors>  
	    <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 --> 
	    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
	    <!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
	    <bean class="com.novel.core.AuthInterceptor"></bean>
	</mvc:interceptors>
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 --> 
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    	<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
    </bean>
    
    <!-- 另外最好还要加入DefaultAnnotationHandlerMapping，不然会被 XML或其它的映射覆盖！ -->  
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    
	<!--freemarker页面解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".ftl"></property>
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="cache" value="true"/>
		<property name="allowSessionOverride" value="true" />
		<!--<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" /> -->
		<!-- 将Spring的FreeMarkerView改成我们扩展的View -->
		<property name="viewClass" value="com.novel.core.ModifiedFreeMarkerView" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!--配置Freemarker -->
	<bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
 		<property name="templateLoaderPath" value="/WEB-INF/freemarker/"></property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
			</props>
		</property>
	</bean>
    
    <!-- 总错误处理-->  
	<!-- bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	    <property name="defaultErrorView">    
	        <value>/error/error</value>  
	    </property>  
	    <property name="defaultStatusCode">    
	        <value>500</value>  
	    </property>     
		<property name="warnLogCategory">    
	        <value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>  
	    </property>     
	</bean-->   
</beans>