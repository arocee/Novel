<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.novel.dao.ArticleMapper" >
  <cache eviction="LRU" type="com.novel.core.mybatisenhancedcache.MybatisRedisCache" flushInterval="60000" size="128" readOnly="true" />
  
  <resultMap id="BaseResultMap" type="Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="article" property="article" jdbcType="VARCHAR" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <collection property="sections" column="aid" resultMap="com.novel.dao.SectionMapper.BaseResultMap" columnPrefix="sec_"></collection>
  </resultMap>

  <sql id="Base_Column_List" >
    id, article, tid 
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="true" flushCache="false">
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectArticleAndSectionByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="true" flushCache="false">
  	select a.id, s.id as sec_id, s.section as sec_section 
  	from article a inner join section s on a.id = s.aid 
  	where a.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectList" resultMap="BaseResultMap" useCache="true" flushCache="false">
    select a.id, a.article, s.id as sec_id, s.section as sec_section 
    from article a inner join section s on a.id = s.aid
  </select>
  
  <select id="selectByTid" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="true" flushCache="false">
  	select 
    <include refid="Base_Column_List" />
    from article
    where tid = #{tid,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" flushCache="false">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="Article" useGeneratedKeys="true" keyProperty="id" flushCache="false">
    insert into article (article, tid
      )
    values (#{article,jdbcType=VARCHAR}, #{tid,jdbcType=INTEGER}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="Article" useGeneratedKeys="true" keyProperty="id" flushCache="false">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="article != null" >
        article,
      </if>
      <if test="tid != null" >
        tid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="article != null" >
        #{article,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="Article" flushCache="false">
    update article
    <set >
      <if test="article != null" >
        article = #{article,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="Article" flushCache="false">
    update article
    set article = #{article,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>