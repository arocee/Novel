<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>  
        <setting name="cacheEnabled" value="true" /><!-- 默认是true,配置映射器是否用缓存 -->  
        <setting name="lazyLoadingEnabled" value="false" /><!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
        <setting name="aggressiveLazyLoading" value="true" /><!-- 注意着两个属性，需要把属性延迟加载和关联对象加载给关闭了，不然放进redis中的cglib代理对象，在对数据发生更改的时候，会出错。 -->
        <setting name="useColumnLabel" value="true" />
        <setting name="multipleResultSetsEnabled" value="true" /><!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
        <setting name="defaultStatementTimeout" value="25" /><!-- 数据库超过25秒仍未响应则超时 -->
        <setting name="defaultExecutorType" value="REUSE" /><!-- 配置默认的执行器。SIMPLE 执行器没有什么特别之处。REUSE 执行器重用预处理语句。BATCH 执行器重用语句和批量更新 -->
    </settings> 
    
	<!-- 给持久层对象配置个别名，能方便调用 -->
	<typeAliases>
		<typeAlias type="com.novel.model.Type" alias="Type"/>
		<typeAlias type="com.novel.model.Article" alias="Article"/>
		<typeAlias type="com.novel.model.Section" alias="Section"/>
		<typeAlias type="com.novel.model.Paragraph" alias="Paragraph"/>
		<typeAlias type="com.novel.model.Novel" alias="Novel"/>
		<typeAlias type="com.novel.model.User" alias="User"/>
		<typeAlias type="com.novel.model.Rule" alias="Rule"/>
		<typeAlias type="com.novel.model.Search" alias="Search"/>
		<typeAlias type="com.novel.model.Pv" alias="Pv"/>
		<typeAlias type="com.novel.vo.NovelCountVo" alias="NovelCountVo"/>
		<typeAlias type="com.novel.vo.PvCountVo" alias="PvCountVo"/>
		<typeAlias type="com.novel.vo.PvVo" alias="PvVo"/>
		<typeAlias type="com.novel.vo.PvDataVo" alias="PvDataVo"/>
	</typeAliases>
</configuration>