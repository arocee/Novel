<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.novel.dao.SectionMapper" >
  <cache eviction="LRU" type="com.novel.core.mybatisenhancedcache.MybatisRedisCache" flushInterval="60000" size="256" />
  
  <resultMap id="BaseResultMap" type="Section">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="section" property="section" jdbcType="VARCHAR" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
    <collection property="paragraphes" column="sid" resultMap="com.novel.dao.ParagraphMapper.BaseResultMap" columnPrefix="par_"></collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, section, aid
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="true" flushCache="false">
    select 
    <include refid="Base_Column_List" />
    from section
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectSectionAndParagraphByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="true" flushCache="false">
    select s.id, s.section, p.id as par_id, p.paragraph as par_paragraph  
  	from section s inner join paragraph p on s.id = p.sid 
  	where s.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByAid" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="true" flushCache="false">
  	select 
    <include refid="Base_Column_List" />
    from section
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" flushCache="true">
    delete from section
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Section" flushCache="true">
    insert into section (section, aid
      )
    values (#{section,jdbcType=VARCHAR}, #{aid,jdbcType=INTEGER}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="Section" flushCache="true">
    insert into section
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="section != null" >
        section,
      </if>
      <if test="aid != null" >
        aid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="section != null" >
        #{section,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="Section" flushCache="true">
    update section
    <set >
      <if test="section != null" >
        section = #{section,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="Section" flushCache="true">
    update section
    set section = #{section,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>